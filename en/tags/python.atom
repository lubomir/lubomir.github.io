<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>lsedlar – Posts tagged Python</title>
    <link href="https://lubomir.github.io/en/tags/python.atom" rel="self" />
    <link href="https://lubomir.github.io" />
    <id>https://lubomir.github.io/en/tags/python.atom</id>
    <author>
        <name>Lubomír Sedlář</name>
        <email>lubomir.sedlar@gmail.com</email>
    </author>
    <updated>2016-08-26T17:41:49Z</updated>
    <entry>
    <title>Using fedmsg to send more fedmsg</title>
    <link href="https://lubomir.github.io/en/2016-08-26-moar-messages.html" />
    <id>https://lubomir.github.io/en/2016-08-26-moar-messages.html</id>
    <published>2016-08-26T00:00:00Z</published>
    <updated>2016-08-26T17:41:49Z</updated>
    <summary type="html"><![CDATA[<p>Fedmsg is a perfect system for automating things. I mostly use it to integrate <a href="https://pagure.io/">Pagure</a> with <a href="http://jenkins.fedorainfracloud.org/">Jenkins</a>, which works rather well.</p>
<p>One hiccup is that when a pull request is updated (by pushing more commits to the branch or rebasing it), Pagure will not notice that until someone visits the pull request page. At that point a comment with the notice is generated and the message sent.</p>
<p>My first instinct to automate this was to use a git hook. It's easy to automate hitting each pull request page.</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="kw">curl</span> -s https://pagure.io/api/0/pungi/pull-requests <span class="kw">|</span> <span class="kw">\</span>
    <span class="kw">jq</span> <span class="st">&#39;.requests[] | select(.user.name == &quot;lsedlar&quot;) | .id&#39;</span> <span class="kw">|</span> <span class="kw">\</span>
    <span class="kw">while</span> <span class="kw">read</span> <span class="ot">PR_ID</span>; <span class="kw">do</span>
        <span class="kw">echo</span> <span class="st">&quot;https://pagure.io/pungi/pull-request/</span><span class="ot">$PR_ID</span><span class="st">&quot;</span>
        <span class="kw">curl</span> -s <span class="st">&quot;https://pagure.io/pungi/pull-request/</span><span class="ot">$PR_ID</span><span class="st">&quot;</span> <span class="kw">&gt;</span>/dev/null
    <span class="kw">done</span></code></pre></div>
<p>However, there <a href="http://stackoverflow.com/a/9038644/1576064">is no <code>post-push</code> hook</a>, so one would have to run the script manually. That's too much work.</p>
<h2 id="fedmsg-to-the-rescue">Fedmsg to the rescue</h2>
<p>How about getting notified about the push from the server? Pagure will send a message announcing a push immediately.</p>
<p>What we need is a very simple consumer that waits for pushes, finds where the pull requests would likely be going to, tries to find one from this branch and hits the web page.</p>
<p>If the push is to a fork, we can assume the pull request would be filed against the original repo. If it's not a fork, then the pull request would probably be against the same repo.</p>
<div class="sourceCode"><pre class="sourceCode python"><code class="sourceCode python">BASE_URL <span class="op">=</span> <span class="st">&#39;https://pagure.io&#39;</span>


<span class="kw">class</span> Poker(fedmsg.consumers.FedmsgConsumer):
    topic <span class="op">=</span> [<span class="st">&#39;io.pagure.prod.pagure.git.receive&#39;</span>]
    config_key <span class="op">=</span> <span class="st">&#39;poker.enabled&#39;</span>

    <span class="kw">def</span> consume(<span class="va">self</span>, msg):
        msg <span class="op">=</span> msg[<span class="st">&#39;body&#39;</span>][<span class="st">&#39;msg&#39;</span>]
        branch <span class="op">=</span> msg[<span class="st">&#39;branch&#39;</span>].split(<span class="st">&#39;/&#39;</span>)[<span class="op">-</span><span class="dv">1</span>]
        repo <span class="op">=</span> msg[<span class="st">&#39;repo&#39;</span>][<span class="st">&#39;name&#39;</span>]
        <span class="cf">if</span> msg[<span class="st">&#39;repo&#39;</span>][<span class="st">&#39;parent&#39;</span>]:
            repo <span class="op">=</span> msg[<span class="st">&#39;repo&#39;</span>][<span class="st">&#39;parent&#39;</span>][<span class="st">&#39;name&#39;</span>]

        url <span class="op">=</span> <span class="st">&#39;</span><span class="sc">%s</span><span class="st">/api/0/</span><span class="sc">%s</span><span class="st">/pull-requests&#39;</span> <span class="op">%</span> (BASE_URL, repo)
        response <span class="op">=</span> requests.get(url)
        <span class="cf">if</span> response.status_code <span class="op">!=</span> <span class="dv">200</span>:
            <span class="va">self</span>.log.warning(<span class="st">&#39;Failed to get </span><span class="sc">%s</span><span class="st"> ...&#39;</span>, url)
            <span class="cf">return</span>

        <span class="cf">for</span> pr <span class="op">in</span> response.json()[<span class="st">&#39;requests&#39;</span>]:
            <span class="cf">if</span> pr[<span class="st">&#39;repo_from&#39;</span>][<span class="st">&#39;id&#39;</span>] <span class="op">!=</span> msg[<span class="st">&#39;repo&#39;</span>][<span class="st">&#39;id&#39;</span>]:
                <span class="cf">continue</span>
            <span class="cf">if</span> pr[<span class="st">&#39;branch_from&#39;</span>] <span class="op">!=</span> branch:
                <span class="cf">continue</span>
            url <span class="op">=</span> <span class="st">&#39;</span><span class="sc">%s</span><span class="st">/</span><span class="sc">%s</span><span class="st">/pull-request/</span><span class="sc">%s</span><span class="st">&#39;</span> <span class="op">%</span> (BASE_URL, repo, pr[<span class="st">&#39;id&#39;</span>])
            <span class="va">self</span>.log.info(<span class="st">&#39;Poking </span><span class="sc">%s</span><span class="st">&#39;</span>, url)
            requests.get(url)
            <span class="cf">return</span></code></pre></div>
<p>A file with this class should be installed with <code>setup.py</code> somewhere under <code>site-packages</code>. For <code>fedmgs-hub</code> to pick the consumer up, there must be a special section in the <code>setup()</code> function call:</p>
<div class="sourceCode"><pre class="sourceCode python"><code class="sourceCode python">entry_points<span class="op">=</span><span class="st">&quot;&quot;&quot;</span>
<span class="st">[moksha.consumer]</span>
<span class="st">pokeapagure = poke_a_pagure:Poker</span>
<span class="st">&quot;&quot;&quot;</span></code></pre></div>
<p>The name on the left of the equals sign does not really matter. The string on the right should be a package name and a class name of the consumer. In this case the file will be <code>poke_a_pagure/__init__.py</code>.</p>
<h2 id="how-to-make-it-work">How to make it work</h2>
<p>This consumer will run as part of <code>fedmsg-hub</code> (provided in similarly named package). All that is needed to get it working is to install the hub and the python package with the class.</p>
<p>There also needs to be a config file in <code>/etc/fedmsg.d/poke_a_pagure.py</code>. The name is completely arbitrary, nothing depends on it.</p>
<div class="sourceCode"><pre class="sourceCode python"><code class="sourceCode python">config <span class="op">=</span> {
    <span class="st">&#39;poker.enabled&#39;</span>: <span class="va">True</span>
}</code></pre></div>
<p>Note the matching config key with the consumer above. There can be more configuration, such as custom rules for logging.</p>
<p>Once that exists, just restart the hub and observe its logs. It will tell you which consumers were loaded.</p>
<p>It's this easy to write a consumer of messages. Now, would it be easier to fix Pagure to send the message immediately? Maybe. But is working with fedmsg fun? Definitely!</p>]]></summary>
</entry>
<entry>
    <title>What's my next badge?</title>
    <link href="https://lubomir.github.io/en/2016-08-20-my-next-badge.html" />
    <id>https://lubomir.github.io/en/2016-08-20-my-next-badge.html</id>
    <published>2016-08-20T00:00:00Z</published>
    <updated>2016-08-20T12:12:11Z</updated>
    <summary type="html"><![CDATA[<p>I love <a href="http://badges.fedoraproject.org/">Fedora Badges</a>. I'm not saying all I do is to get more badges, but it's a great motivator. One thing that somewhat miss a guidance on what options I have, what should I do to get another badge, how much activity will it need.</p>
<p>Fedora Project is not the only community that awards badges to its members. For example Stack Overflow has badges as well. In you Stack Overflow profile you can see which badge you are likely going to get next and how much progress you have made on that.</p>
<figure>
<img src="/images/so-badges.png" alt="Badges on Stack Overflow" /><figcaption>Badges on Stack Overflow</figcaption>
</figure>
<p>Is it possible to do something like this for Fedora badges? Turns out it kind-of is. There actually is [a related issue] filed for the awesome <a href="https://pagure.io/fedora-hubs">Fedora Hubs project</a> to show options of next badges.</p>
<p>All this actually relies on having information about <a href="https://github.com/fedora-infra/tahrir/issues/343">badge paths</a>, but until it's available in production, it can be reasonably hacked based on badge name and a short list of exceptions.</p>
<h2 id="baby-steps">Baby steps</h2>
<p>First thing that comes to mind is to simply look at statistics of the badges. The ones that are awarded more often are most likely the easiest to get. Let's start from that by finding the 5 most common badges that I don't have yet.</p>
<p>However, just taking that is not a particularly good suggestion: in my case 3 out of these badges turn out to be &quot;have FAS account for at least X years&quot;. I'm slowly getting there, but there's not much I can do to speed this up. It makes sense to only show the first badge from each series.</p>
<p style="text-align: center">
<a href="https://badges.fedoraproject.org/badge/dont-call-it-a-comeback" title="Don't Call it a Comeback – You reactivated your Fedora account"><img width=128 src="https://badges.fedoraproject.org/pngs/dont-call-it-a-comeback.png" alt="dont-call-it-a-comeback icon"></a> <a href="https://badges.fedoraproject.org/badge/egg" title="Egg – You've had a FAS account for over one year"><img width=128 src="https://badges.fedoraproject.org/pngs/fas-account-egg.png" alt="egg icon"></a> <a href="https://badges.fedoraproject.org/badge/curious-penguin-ask-fedora-i" title="Curious Penguin (Ask Fedora I) – You had your first interaction with the Ask Fedora forum system."><img width=128 src="https://badges.fedoraproject.org/pngs/askbot-curious-penguin-01.png" alt="curious-penguin-ask-fedora-i icon"></a> <a href="https://badges.fedoraproject.org/badge/crypto-panda" title="Crypto Panda – You updated your GPG key with the Fedora Account System (FAS)"><img width=128 src="https://badges.fedoraproject.org/pngs/fas-crypto-panda.png" alt="crypto-panda icon"></a> <a href="https://badges.fedoraproject.org/badge/speak-up!" title="Speak Up! – Participated in an IRC meeting."><img width=128 src="https://badges.fedoraproject.org/pngs/irc-speak-up.png" alt="speak-up! icon"></a>
</p>
<h2 id="progress-towards-next-badge">Progress towards next badge</h2>
<p>Before we can estimate progress on getting a badge, it is important to understand how the badges are awarded. The system is based on the messaging bus<a href="#fn1" class="footnoteRef" id="fnref1"><sup>1</sup></a>. The <a href="https://github.com/fedora-infra/fedbadges">fedbadges</a> service listens to the bus and every time it sees a message, it checks it against the rules it has defined.</p>
<p>The process starts with a simple check on the message content to make sure that the message is connected to some badge. If it is, more complex checks are performed. These checks either communicate with <a href="https://admin.fedoraproject.org/pkgdb/">pkgdb</a> or <a href="https://github.com/fedora-infra/datanommer">datanommer</a>, the service that archives old messages.</p>
<p>Now obviously I'm not keen on reimplementing the whole rule engine. Fortunately, it is possible to reuse the code from <a href="https://github.com/fedora-infra/fedbadges">fedbadges</a>. All badges that I care about for this part only need the datanommer integration, so that is a big help.</p>
<p>The biggest issue I faced with this is the fact that <a href="https://github.com/fedora-infra/fedbadges">fedbadges</a> connects directly to <a href="https://github.com/fedora-infra/datanommer">datanommer</a>'s database. I can't do that. My workaround was to write a script that would download all messages related to me from <a href="https://apps.fedoraproject.org/datagrepper/">datagrepper</a> and store them locally. This works reasonably well for me personally, but trying to get the messages for someone who is active for a longer time is going to be an issue.</p>
<p>Unfortunately, the list of messages related to a particular user is not enough for all badges: <a href="https://bodhi.fedoraproject.org/">Bodhi</a> has badges for other people voting on your updates. Therefore we also need all messages related to updates a person creates.</p>
<div style="text-align: center; margin-bottom: 1em">
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/senior-badger-badger-ii" title="Senior Badger (Badger II) – You got (about) 50 Fedora Badges.  Way to go!" style="display: block"><img src="https://badges.fedoraproject.org/pngs/badger-02.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 94.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
47 / 50
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/chocolate-chip-cookie-ii" title="Chocolate Chip (Cookie II) – Ten people think you're great, because they've given you cookies. Yummy!" style="display: block"><img src="https://badges.fedoraproject.org/pngs/chocolatechipcookie.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 80.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
8 / 10
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/bloggin-it!-planet-iii" title="Bloggin' it! (Planet III) – You posted 10 or more things to the Fedora Planet!" style="display: block"><img src="https://badges.fedoraproject.org/pngs/planet-bloggin-it-03.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 60.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
6 / 10
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/catching-the-bull-tester-iv" title="Catching the Bull (Tester IV) – *(a great struggle, repeated escapes, discipline required)* Tested and added karma to 20 updates-testing updates in Bodhi. " style="display: block"><img src="https://badges.fedoraproject.org/pngs/tester-04.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 55.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
11 / 20
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/what-goes-around-comes-around-karma-iii" title="What goes around comes around (Karma III) – You have received 50 or more good karma on your bodhi updates" style="display: block"><img src="https://badges.fedoraproject.org/pngs/what-goes-around-comes-around-50.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 50.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
25 / 50
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/building-the-outer-ring-copr-build-vii" title="Building the Outer Ring (Copr Build VII) – Successfully completed 999 copr builds" style="display: block"><img src="https://badges.fedoraproject.org/pngs/copr-build-999.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 43.8438438438%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
438 / 999
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/what-goes-up...-koji-failure-ii" title="What goes up... (Koji Failure II) – Submitted 5 or more koji builds that failed to build." style="display: block"><img src="https://badges.fedoraproject.org/pngs/koji-what-goes-up-02.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 40.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
2 / 5
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/you-can-call-me-patches-scm-iv" title="You can call me &quot;Patches&quot; (SCM IV) – Pushed 400 commits to a Fedora package repository." style="display: block"><img src="https://badges.fedoraproject.org/pngs/you-can-call-me-patches-04.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 36.5%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
146 / 400
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/if-you-build-it...-koji-success-iv" title="If you build it... (Koji Success IV) – Succesfully completed 250 koji builds." style="display: block"><img src="https://badges.fedoraproject.org/pngs/koji-if-you-build-it-04.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 34.8%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
87 / 250
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/is-this-thing-on-updates-testing-iii" title="Is this thing on? (Updates-Testing III) – Pushed 100 bodhi updates to the testing repositories." style="display: block"><img src="https://badges.fedoraproject.org/pngs/is-this-thing-on-03.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 34.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
34 / 100
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/like-a-rock-updates-stable-iii" title="Like a Rock (Updates-Stable III) – Pushed 100 bodhi updates to the stable repositories." style="display: block"><img src="https://badges.fedoraproject.org/pngs/like-a-rock-03.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 24.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
24 / 100
</div>
</div>
</div>
<div style="display: inline-block; text-align: center">
<a href="https://badges.fedoraproject.org/badge/science-kernel-tester-ii" title="Science (Kernel Tester II) – You completed 5 runs of the kernel regression test suite" style="display: block"><img src="https://badges.fedoraproject.org/pngs/kernel_tester_5.png" width="128"></a>
<div style="width: 200px; height: 24px; background: #999; display: inline-block; color: #fff; position: relative;">
<div style="width: 20.0%; height: 100%; background: #3C6EB4; position: absolute;">

</div>
<div style="position: absolute; left: 0; right: 0; text-align:center; line-height: 24px; font-weight: bold;">
1 / 5
</div>
</div>
</div>
</div>
<p>Another problematic badge is the Cookie one: the number of cookies you have get's reset every release cycle, so despite the number 8 above, I actually only have 1 right now.</p>
<h2 id="i-want-it-too">I want it too</h2>
<p>If you want to experiment with this code, I put it on Pagure as <a href="https://pagure.io/my-next-badge">my-next-badge</a>. There are instructions in README. I didn't try to optimize this in any way (yet), so it needs a lot of memory as all the messages must fit there. In my case, it is about 40 MiB. For other people, it might be significantly more. By &quot;more&quot; I mean it can easily be several gigabytes.</p>
<p>If you decide to try this, please note that the script is a hack that may not always be correct. It may try to convince you that you satisfy conditions for some badge even if you don't have it. Take it with a grain of salt.</p>
<section class="footnotes">
<hr />
<ol>
<li id="fn1"><p>Well, almost. Some badges are awarded manually. We can ignore that here.<a href="#fnref1">↩</a></p></li>
</ol>
</section>]]></summary>
</entry>
<entry>
    <title>Exploring test case fixtures in Django</title>
    <link href="https://lubomir.github.io/en/2014-09-18-exploring-django-fixtures.html" />
    <id>https://lubomir.github.io/en/2014-09-18-exploring-django-fixtures.html</id>
    <published>2014-09-18T00:00:00Z</published>
    <updated>2016-01-06T19:56:49Z</updated>
    <summary type="html"><![CDATA[<p><a href="https://www.djangoproject.com/">Django</a> has a nice feature for exploring the environment in which the tests run via the <code>testserver</code> command. You can give it paths to fixture files used in the test case you want and go crazy.</p>
<p>However, this use case becomes really unpleasant once you need to load bigger number of fixtures. It would be much more user friendly if you could instead tell it what test case you want to explore and the script automatically inferred what fixtures to load.</p>
<p>The <code>--help</code> output is silent on this, so let's roll our own solution to this. The script will have two mandatory arguments: module containing the tests and the actual test case name.</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="kw">run-test-server.py</span> myapp.tests MyComplicatedTestCase</code></pre></div>
<p>The first idea how to proceed is to simply import the module and look at <code>fixtures</code> attribute of the test case. Sadly, it is not that easy. Importing the module fails with <code>ImproperlyConfiguredException</code> because simply importing a module would be too much to ask for without loading all the <a href="https://www.djangoproject.com/">Django</a> settings. This could be a whole other rant.</p>
<p>Since <code>__import__</code> is slightly more complicated that necessary, let's offload the actual importing to <code>importlib.import_module</code> which works exactly as expected. However, it is only available since Python 2.7.</p>
<p>Once the module is imported, all that needs to be done is to retrieve the test case, its fixtures and fire out the <code>testserver</code> command with appropriate arguments.</p>
<p>The whole script looks as follows. The only unexplained part is the modification of path. This needs to be done so that the script can be located anywhere and still manage to import modules from current directory.</p>
<div class="sourceCode"><pre class="sourceCode python"><code class="sourceCode python"><span class="co">#! /usr/bin/env python</span>

<span class="im">import</span> argparse
<span class="im">from</span> subprocess <span class="im">import</span> call
<span class="im">import</span> sys
<span class="im">import</span> importlib

<span class="im">from</span> django.conf <span class="im">import</span> settings


<span class="kw">def</span> get_fixtures(module, case):
    settings.configure()
    parts <span class="op">=</span> module.split(<span class="st">&#39;.&#39;</span>)

    app <span class="op">=</span> importlib.import_module(module)
    <span class="cf">return</span> <span class="bu">getattr</span>(app, case).fixtures


<span class="kw">def</span> main():
    parser <span class="op">=</span> argparse.ArgumentParser()
    parser.add_argument(<span class="st">&#39;MODULE&#39;</span>, <span class="bu">type</span><span class="op">=</span><span class="bu">str</span>)
    parser.add_argument(<span class="st">&#39;TEST_CASE&#39;</span>, <span class="bu">type</span><span class="op">=</span><span class="bu">str</span>)

    args <span class="op">=</span> parser.parse_args()
    fixtures <span class="op">=</span> get_fixtures(args.MODULE, args.TEST_CASE)

    call([<span class="st">&quot;python&quot;</span>, <span class="st">&quot;manage.py&quot;</span>, <span class="st">&quot;testserver&quot;</span>] <span class="op">+</span> fixtures)


<span class="cf">if</span> <span class="va">__name__</span> <span class="op">==</span> <span class="st">&#39;__main__&#39;</span>:
    sys.path.append(<span class="st">&#39;.&#39;</span>)
    main()</code></pre></div>
<h2 id="further-improvements">Further improvements</h2>
<p>This script could obviously use a bit more polish:</p>
<ul>
<li>The help output could be more helpful.</li>
<li>If something breaks, the user is presented with a stack trace. Not nice.</li>
</ul>]]></summary>
</entry>

</feed>
